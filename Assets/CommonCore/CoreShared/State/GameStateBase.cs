using Newtonsoft.Json;
using System.IO;

namespace CommonCore.State
{
    //DO NOT EDIT THIS FILE

    /// <summary>
    /// Represents the entire state of the game
    /// </summary>
    public partial class GameState
    {
        private static GameState instance;

        public static GameState Instance
        {
            get
            {
                if (instance == null)
                {
                    instance = new GameState();
                }
                return instance;
            }
        }

        /// <summary>
        /// Purges the current game state and recreates it
        /// </summary>
        public static void Reset()
        {
            instance = new GameState();
        }

        /// <summary>
        /// Saves the current game state to file
        /// </summary>
        public static void SerializeToFile(string path)
        {
            string data = Serialize();
            File.WriteAllText(path, data);
        }

        /// <summary>
        /// Serializes the current game state to a string
        /// </summary>
        public static string Serialize()
        {
            return JsonConvert.SerializeObject(Instance,
                Formatting.Indented,
                new JsonSerializerSettings
                {
                    Converters = CCJsonConverters.Defaults.Converters,
                    TypeNameHandling = TypeNameHandling.Auto
                });
        }

        /// <summary>
        /// Loads a file into the current game state
        /// </summary>
        public static void DeserializeFromFile(string path)
        {
            Deserialize(File.ReadAllText(path));
        }

        /// <summary>
        /// Deserializes a string and replaces the current game state
        /// </summary>
        public static void Deserialize(string data)
        {
            instance = JsonConvert.DeserializeObject<GameState>(data,
            new JsonSerializerSettings
            {
                Converters = CCJsonConverters.Defaults.Converters,
                TypeNameHandling = TypeNameHandling.Auto
            });
        }

        /// <summary>
        /// Loads initial values into the current game state
        /// </summary>
        public static void LoadInitial()
        {
            instance.Init();
        }

        /// <summary>
        /// Loads initial values into the current game state
        /// </summary>
        /// <remarks>
        /// Implement this in your variant of GameState
        /// </remarks>
        partial void Init();
    }
}
